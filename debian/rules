#!/usr/bin/make -f
SHELL+= -e

# uncomment to enable installing the VMWare plugins
#HAVE_VMWARE = 1

D := $(CURDIR)/debian/tivsm
T := $(CURDIR)/tmp

TIVSM_BA := $T/usr/bin/dsmc
TIVSM_BA_RPM := $(CURDIR)/../TIVsm-BA.x86_64.rpm
TIVSM_API := $T/usr/lib64/libApiTSM64.so
TIVSM_API_RPM := $(CURDIR)/../TIVsm-API64.x86_64.rpm
TIVSM_ITCAT := $T/opt/tivoli/tsm/client/lang/IT_IT/dsmc.hlp
TIVSM_ITCAT_RPM := $(CURDIR)/../TIVsm-msg.IT_IT.x86_64.rpm
GSK_CRYPT := $T/usr/local/ibm/gsk8_64/lib64/C/icc/icclib/libicclib080.so
GSK_CRYPT_RPM := $(CURDIR)/../gskcrypt64-*.linux.x86_64.rpm
GSK_SSL := $T/usr/local/ibm/gsk8_64/lib64/libgsk8km_64.so
GSK_SSL_RPM := $(CURDIR)/../gskssl64-*.linux.x86_64.rpm

clean:
	dh_testdir
	-rm -rf $T
	dh_clean

build: $T $(TIVSM_ITCAT) $(TIVSM_BA) $(TIVSM_API) $(GSK_CRYPT) $(GSK_SSL)

$T:
	mkdir $@

$(TIVSM_BA): $(TIVSM_BA_RPM)
	cd $T && rpm2cpio $< | cpio --extract --verbose --make-directories --no-absolute-filenames --sparse

$(TIVSM_API): $(TIVSM_API_RPM)
	cd $T && rpm2cpio $< | cpio --extract --verbose --make-directories --no-absolute-filenames --sparse

$(TIVSM_ITCAT): $(TIVSM_ITCAT_RPM)
	cd $T && rpm2cpio $< | cpio --extract --verbose --make-directories --no-absolute-filenames --sparse

$(GSK_CRYPT): $(GSK_CRYPT_RPM)
	cd $T && rpm2cpio $< | cpio --extract --verbose --make-directories --no-absolute-filenames --sparse

$(GSK_SSL): $(GSK_SSL_RPM)
	cd $T && rpm2cpio $< | cpio --extract --verbose --make-directories --no-absolute-filenames --sparse

binary-arch: checkroot build
	dh_testdir
	dh_prep

	dh_installdirs /etc/ /usr/lib/ /opt/tivoli/tsm/tivinv/
	cp -a $T/* $D/

	dh_installdocs
	dh_installexamples dsm.sys

	mv $D/usr/local/ibm/gsk8_64/lib64/* $D/usr/lib/
	mv $D/usr/local/ibm/gsk8_64/bin/* $D/usr/bin/
	rm -rf $D/usr/local/ $D/usr/lib/*/icc/ReadMe.txt

	# the real file is in api/bin64/
	mv $D/usr/lib64/* $D/usr/lib/

	cd $D && find . -name '*.jar' | xargs rm
	cd $D && find . -name '*.smp' | xargs rm
	cd $D/opt/tivoli/tsm/client/ && rm -rf \
		ba/bin/dsmcad ba/bin/rc.dsmcad \
		api/properties/ ba/properties/ \
		ba/bin/dsmj ba/bin/favicon.ico ba/bin/images/ \
		ba/bin/configFile ba/bin/commonFunctions ba/bin/*.sh \
		api/bin64/sample/ icc32/icc/ReadMe.txt \
		ba/NOTICES.TXT ba/README_* ba/client_message.chg \
		api/NOTICES.TXT api/README_*
	cd $D && rm -rf usr/bin/dsmcad etc/init.d/dsmcad usr/bin/dsmj \
		opt/tivoli/tsm/license/ usr/lib64/

	dh_link

	# these libraries are used by the vmware plugins, and probably
	# you want to use the system copies anyway
	cd $D/opt/tivoli/tsm/client/api/bin64/ && rm -f \
		libcrypto.so.0.9.8 libssl.so.0.9.8
	cd $D/opt/tivoli/tsm/client/ba/bin/ && rm -f \
		libcrypto.so.0.9.8 libssl.so.0.9.8 libcurl.so.4 \
		libglib-2.0.so.0 libgobject-2.0.so.0 libgthread-2.0.so.0

ifdef HAVE_VMWARE
	chmod -x $D/opt/tivoli/tsm/client/ba/bin/dsmvddk.opt
else
	# Remove VMWare integration
	cd $D/opt/tivoli/tsm/client/ && rm -rf \
		ba/bin/dsmvddk.opt ba/bin/*.so.* ba/bin/*.so \
		ba/bin/plugins64/ ba/bin/vmtsmvss/ \
		api/bin64/libTsmViSdk*.so api/bin64/libVM*.so
endif

	if cmp -s $D/opt/tivoli/tsm/client/api/bin64/dsmtca \
		$D/opt/tivoli/tsm/client/ba/bin/dsmtca; then \
	ln -sf ../../ba/bin/dsmtca $D/opt/tivoli/tsm/client/api/bin64/dsmtca; \
	fi

	# create the symlinks for the localized message catalog(s)
	for cat in `cd $D/opt/tivoli/tsm/client/lang/ && /bin/ls -1`; do \
	  ln -s ../../lang/$$cat $D/opt/tivoli/tsm/client/api/bin64/ ; \
	  ln -s ../../lang/$$cat $D/opt/tivoli/tsm/client/ba/bin/ ; \
	done

	dh_installinit --name=dsm
	dh_installchangelogs
	dh_compress
	# ICC fails the self-test if modified!
	dh_strip --exclude=/usr/lib/C/ --exclude=/usr/lib/N/
	dh_fixperms --exclude=dsmtca
	# with -X we avoid the hard dependencies needed by the vmware plugins
	dh_shlibdeps \
	  -l/opt/tivoli/tsm/client/api/bin64/:/opt/tivoli/tsm/client/ba/bin/ \
	  -Xlibvix -XlibdiskLibPlugin.so -Xlibvmomi.so -Xlibgvmomi.so \
	  -XlibTsmViSdk.so
	dh_installdeb
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary-indep:

binary: binary-indep binary-arch

build-arch: build
build-indep: build

checkroot:
	test root = "`whoami`"

.PHONY: binary binary-arch binary-indep build build-arch build-indep clean checkroot
